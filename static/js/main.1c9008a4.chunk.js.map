{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","renderFile","fileObj","ExcelRenderer","err","resp","console","log","setState","dataLoaded","cols","rows","fileHandler","event","target","files","length","fileName","name","slice","lastIndexOf","uploadedFileName","isFormInvalid","openFileBrowser","fileInput","current","click","openNewPage","chosenItem","url","window","open","state","isOpen","bind","toggle","React","createRef","this","className","Jumbotron","Button","onClick","Container","FormGroup","row","Label","for","xs","sm","lg","size","style","fontStyle","Col","InputGroup","InputGroupAddon","addonType","color","zIndex","type","hidden","onChange","ref","value","Input","readOnly","invalid","Card","body","outline","data","columns","tableClassName","tableHeaderRowClass","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c9008a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {OutTable, ExcelRenderer} from 'react-excel-renderer';\nimport { Jumbotron, Col, Input, InputGroup, InputGroupAddon, FormGroup, Label, Button, Container, Card } from 'reactstrap';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      isOpen: false,\n      dataLoaded: false,\n      isFormInvalid: false,\n      rows: null,\n      cols: null\n    }\n    this.fileHandler = this.fileHandler.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.openFileBrowser = this.openFileBrowser.bind(this);\n    this.renderFile = this.renderFile.bind(this);\n    this.openNewPage = this.openNewPage.bind(this);\n    this.fileInput = React.createRef();\n  }\n\n  renderFile = (fileObj) => {\n      //pass the fileObj as parameter\n      ExcelRenderer(fileObj, (err, resp) => {\n        if(err){\n          console.log(err);            \n        }\n        else{\n          this.setState({\n            dataLoaded: true,\n            cols: resp.cols,\n            rows: resp.rows\n          });\n        }\n      }); \n  }\n\n  fileHandler = (event) => {    \n    if(event.target.files.length){\n      let fileObj = event.target.files[0];\n      let fileName = fileObj.name;\n\n      \n      //only .xlsx extension file uploaded else display error message otherwise\n      if(fileName.slice(fileName.lastIndexOf('.')+1) === \"xlsx\"){\n        this.setState({\n          uploadedFileName: fileName,\n          isFormInvalid: false\n        });\n        this.renderFile(fileObj)\n      }    \n      else{\n        this.setState({\n          isFormInvalid: true,\n          uploadedFileName: \"\"\n        })\n      }\n    }               \n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  openFileBrowser = () => {\n    this.fileInput.current.click();\n  }\n\n  openNewPage = (chosenItem) => {\n    const url = chosenItem === \"github\" ? \"https://github.com/Erasable-Mak\" : \"https://mern-additional-features.herokuapp.com/\";\n    window.open(url, '_blank');\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"jumbotron-backgrounds\">\n          <Jumbotron className=\"jumbotron-background\">  \n          <div className=\"pp\">        \n              <h1 className=\"display-3\">Doperator</h1>\n              </div>\n              <div className=\"kk\">  \n              <p className=\"lead\">Welcome to Doperator, developed with react-excel-renderer.</p>  \n              </div>\n              <div className=\"pp\">    \n              <Button className=\"primary jumbotron-button\"  onClick={this.openNewPage.bind(this,\"github\")}>GitHub</Button>{' '}\n              <Button className=\"primary jumbotron-button\" onClick={this.openNewPage.bind(this,\"medium\")}>Other Live Site</Button>                      \n              <p>-----<span className=\"fa fa-heart\">--------------------</span></p>\n              </div>\n          </Jumbotron>\n        </div>\n        <Container>\n        <form>\n        <div className=\"ss\">\n          <FormGroup row>\n            <Label for=\"exampleFile\" xs={6} sm={4} lg={2} size=\"lg\" style={{fontStyle: \"italic\"}}>Upload</Label><Label> .xlsx/.csv</Label><br/>          \n            <Col xs={6} sm={8} lg={10}>                                                     \n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <Button color=\"info\" style={{color: \"black\", zIndex: 0}} onClick={this.openFileBrowser.bind(this)}><i className=\"cui-file\"></i> Select File Browse&hellip;</Button><br/>\n                  <input type=\"file\" hidden onChange={this.fileHandler.bind(this)} ref={this.fileInput} onClick={(event)=> { event.target.value = null }} style={{\"padding\":\"10px\"}} />                                \n                </InputGroupAddon>\n                <Input type=\"text\" className=\"form-control\" value={this.state.uploadedFileName} readOnly invalid={this.state.isFormInvalid} /> \n              </InputGroup>     \n            </Col>                                                   \n          </FormGroup>   \n          </div>\n        </form>\n\n        {this.state.dataLoaded && \n        <div className=\"zz\">\n          <Card body outline color=\"secondary\" className=\"restrict-card\">\n            \n              <OutTable data={this.state.rows} columns={this.state.cols} tableClassName=\"ExcelTable2007\" tableHeaderRowClass=\"heading\" />\n            \n          </Card>  \n        </div>}\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App; \n\n\n/*import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App; */\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}